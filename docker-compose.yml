version: '3'
volumes: 
  mongo-db:
  mongo-configdb:
networks: 
  twist:
services: 
  db:
    image: mongo
    restart: always
    environment: 
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: tweet_db
      TZ: 'Asia/Tokyo'
    ports:
      - 27017:27017
    volumes:
      - mongo-db:/data/db
      - mongo-configdb:/data/configdb
    networks: 
      - twist
  db-admin:
    image: mongo-express:latest
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - db
    networks:
      - twist
    environment:
      ME_CONFIG_MONGODB_SERVER: db
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
  app:
    build:
      context: backend
      dockerfile: docker/app/Dockerfile
    restart: always
    volumes: 
      - ./backend/src/app:/app/src
    networks: 
      - twist
    environment:
      TZ: Asia/Tokyo
      MONGO_DB_HOST: db
      MONGO_DB_DATABASE: tweet_db
      MONGO_DB_USERNAME: root
      MONGO_DB_PASSWORD: example
    working_dir: '/app/src/'
    stdin_open: true
    tty: true
    depends_on: 
      - db
  web:
    build: 
      context: backend
      dockerfile: docker/web/Dockerfile
    restart: always
    tty: true
    stdin_open: true
    volumes: 
      - ./backend/src/web:/app/src
    networks: 
      - twist
    environment:
      TZ: Asia/Tokyo
      MONGO_DB_HOST: db
      MONGO_DB_DATABASE: tweet_db
      MONGO_DB_USERNAME: root
      MONGO_DB_PASSWORD: example
    ports:
      - 3001:3000
  frontend:
    build: 
      context: frontend
    restart: always
    ports: 
      - 3002:3000
    volumes: 
      - ./frontend/src:/app/src
    stdin_open: true
    tty: true
